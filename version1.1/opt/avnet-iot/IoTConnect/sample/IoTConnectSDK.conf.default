[CloudSDKConfiguration]
scopeid = One0005A911
env = avnetpoc
cpid = B3A7D54220AD4397ABF35D7EC539FBA6

[CloudSystemControl]
# cloud urls for feature control
configuration_version = 1
http_auth_token = https://avnetauth.iotconnect.io/api/v1.1
http_auth_login = https://avnetauth.iotconnect.io/api/v1.1
http_device_create = https://avnetdevice.iotconnect.io/api/v1.1
http_device_template = https://avnetdevice.iotconnect.io/api/v1.1
http_rule_template = https://avnetdevice.iotconnect.io/api/v1.1
http_event_template = https://avnetevent.iotconnect.io/api/v1.1
http_user_template = https://avnetuser.iotconnect.io/api/v1.1
http_device_firmware = https://avnetfirmware.iotconnect.io/api/v1.1
# override default template name or guid and display name 
template_guid = 
template_name = 
display_name = 
# cloud entity ID
entity_guid = 12F60889-BF0E-402B-A3B4-FFD38BA62D62
# next to for future support
isedgesupport = 0 
isgatewaysupport = 0
#
# user name and password
#
 
username =   
password =  

# Cloud role for access to device
role = PiRole
# Cloud solution key
solution-key = QkQ2OTg1MUMtM0M4Ni00NzZGLUJDODctOUJDRThDQ0E4QkU4LWFjY2Vzc0tFWS1pazZhbW8wbmJp

# Default SDK object count/command count/rulecount, etc.  Also logging feature you could save logs on network or usbmemory.  If enabledebug=0 then log goes to /dev/null
#
defaultobjectcount = 1  
defaultcommandcount = 0  
defaultrulecount = 0 
defaultomegarulecount = 0
defaultsenddelayseconds = 10
# Rate in seconds that the sensor data is sent to cloud (PushAlways or Heartbeat can be used which are delevered every second if available) otherwise data is collected on a queue until the timeout)
sendtocloudrate = 20
# 0 - disables sdk attiny watchdog, otherwise pet rate is given and must be less than 60 seconds.
useiotwatchdog = 0
# 0 - disable debugging, otherwise specify log file location debuglogfile given below is the default if enabledebug=1.
enabledebug = 0 
debuglogfile = /var/log/iot.log


#
# Default Omega sensor configuration
#
# usbsensorreport - used for all smart sensors can be Polled or OnChange
# usbsensorreportpolltime - Time in seconds between checking smart sensor.
# zwrecconnectstatic - Yes/No - Check for static IP in 192.168.200.*
# zwrecconnectdynamic - Yes/No - Check for IP's with zwrec as part of hostname
# zwrecconnectdynamicnames - Check for hostname on ethernet interfaces can be All(for all devices with "zwrec" as part of the hostname.  It can also be a list of specific ZWREC devices such as "zwrec8820".  It can also be set to None.
#
# zwrecconnectstaticip - Check for IP address on ethernet interfaces can be All(for all devices.  It can also be a list of specific ZWREC devices such as "192.168.200.200".
#
# zwrecsensorreport - used for all ZWREC sensors can be Polled or OnChange
# zwrecsensorreportpolltime - Time in seconds between checking ZWREC sensor.
# rs485modbus - enable or disable modbus Can be Yes or No for Enable/Disable. 
# rs485modbusslaveaddresses - This is a list of modbus slave addresses (i.e 1 2 10)
# rs485modbusbaud - modbus baudrate
# rs485modbusparity = modbus parity. Can be E - even, O - odd, N - none
# rs485modbusstopbits = modbus stopbits (1 or 0)
# rs485modbusdatabits = 8 or 7, etc.
# rs485modbusheartbeatcount =
# precision = floating point precision reported to cloud for ZW series
# enabledebug = 0 add to debug log if enabled
#
[OmegaSensorConfiguration]
usbsensorreport = OnChange 
usbsensorreportpolltime = 10
usbsensorreportheartbeatcount = 10
zwrecconnectstatic = Yes 
zwrecconnectdynamic = Yes
zwrecconnectdynamicnames = All 
zwrecconnectstaticip = All
zwrecsensorreport = OnChange 
zwrecsensorreportpolltime = 10
zwrecsensorreportheartbeatcount = 10
zwrecunits = unknown
rs485modbus = Yes 
rs485modbusslaveaddresses = 1
rs485modbusbaud = 38400
rs485modbusparity = E
rs485modbusstopbits = 1
rs485modbusdatabits = 8
rs485mobbusheartbeatcount = 10
precision = 0 
enabledebug = 0  
#
# Default Objects Section
#
# Notes:
#   value = one of STRING or NUMBER
#   name = name of sensor on cloud
#   report = one of "Polled" or "OnChange"
#   reportpolltime = number of seconds to check sensor.
#   PushAlways = 1 - always send this data, 0 - Send on heartbeat only.
#   usepythoninterface = name of the python routine servicing your sensor.
#   description = Description of sensor as it appears on the cloud.
#   reportheartbeatcount = number of reportpolltimes before pushing value to cloud
#   units = units value as they appear on the cloud
#   precision = floating point report data precsion, 0- no precision for this object, 1-n = number of digits after decimal point
#
# edgeaggregatetype, edgetumblingwindow = future edge device enhancements.
#

[CloudSDKDefaultObject1]
value = NUMBER
name = CpuTemperature
report = OnChange 
reportpolltime = 60
pushdataalways = 1
usepythoninterface = GetTheTemp
description = This monitors the interal cpu temperature and reports on change
edgeaggregatetype = Min
edgetumblingwindow = 1s
reportheartbeatcount = 1
units = Celsius
precision = 1

[CloudSDKDefaultObject2]
value = STRING
name = SystemHealth
report = Polled
reportpolltime = 60 
usepythoninterface = SystemHealth
description = This monitors the SystemHealth
edgeaggregatetype = Min
edgetumblingwindow = 1s
units = String
reportheartbeatcount = 10
pushdataalways = 1
precision = 0


[CloudSDKDefaultObject3]
value = NUMBER
name = GetDigitalInput1
report = OnChange
reportpolltime = 10
usepythoninterface = GetDigitalInput1
description = Returns the state of Digital input 1
reportheartbeatcount = 100
units = on-off
pushdataalways = 0
precision = 0

[CloudSDKDefaultObject4]
value = NUMBER
name = GetDigitalInput2
report = OnChange
reportpolltime = 10
usepythoninterface = GetDigitalInput2
description = Returns the state of Digital input 2
reportheartbeatcount = 100
units = on-off
pushdataalways = 0
precision = 0


[CloudSDKDefaultObject5]
value = NUMBER
name = GetDigitalInput3
report = OnChange
reportpolltime = 10
usepythoninterface = GetDigitalInput3
description = Returns the state of Digital input 3
reportheartbeatcount = 100
units = on-off
pushdataalways = 0
precision = 0

[CloudSDKDefaultObject6]
value = NUMBER
name = GetDigitalInput4
report = OnChange
reportpolltime = 10
usepythoninterface = GetDigitalInput4
description = Returns the state of Digital input 4
reportheartbeatcount = 100
units = on-off
pushdataalways = 0
precision = 0

[CloudSDKDefaultObject7]
value = NUMBER
name = ProcessMonitor
report = OnChange
reportpolltime = 60
usepythoninterface = ProcessMonitor
description = Returns the number of python threads running
reportheartbeatcount = 100
units = integer
pushdataalways = 0
precision = 0

[CloudSDKDefaultObject8]
value = NUMBER
name = FreeMemory
report = OnChange
reportpolltime = 600
usepythoninterface = FreeMemory
description = Returns the amount of free memory
reportheartbeatcount = 10
units = integer
pushdataalways = 0
precision = 0

[CloudSDKDefaultObject9]
value = NUMBER
name = CpuUtilization
report = Polled 
reportpolltime = 60
usepythoninterface = CpuUtilization
description = Returns the percent cpu utilization
reportheartbeatcount = 10
units = integer
pushdataalways = 0
precision = 0

[CloudSDKDefaultObject10]
value = NUMBER
name = FreeDisk
report = OnChange
reportpolltime = 600
usepythoninterface = FreeDisk
description = Returns the number of free bytes on the rootfs
reportheartbeatcount = 10
units = integer
pushdataalways = 0
precision = 0

#
# Default Commands Section
#
# Notes.
#
# commandname = name of command as it appears on the cloud
# command = name of command to execute
# hasparameter = 1 - if parameter required, 0 - no parameter
# requiresack = 1 - if Ack required, 0 - no Ack required
# isiotcommand = 1 - if OTA command, 0 - if cloud command.
# usepythoninterface = python function called when cloud command is received.
#

[CloudSDKDefaultCommand1]
commandname = Reboot
command = Reboot
hasparameter = 0
requiresack = 0
isiotcommand = 0
usepythoninterface = RebootNow

[CloudSDKDefaultCommand2]
commandname = FactoryDefault
command = FactoryDefault
hasparameter = 0
requiresack = 0
isiotcommand = 0
usepythoninterface = FactoryDefaultNow

[CloudSDKDefaultCommand3]
commandname = SetDigitalOutput1Now
command = SetDigitalOutput1Now
hasparameter = 0
requiresack = 0
isiotcommand = 0
usepythoninterface = SetDigitalOutput1Now

[CloudSDKDefaultCommand4]
commandname = SetDigitalOutput2Now
command = SetDigitalOutput2Now
hasparameter = 0
requiresack = 0
isiotcommand = 0
usepythoninterface = SetDigitalOutput2Now

[CloudSDKDefaultCommand5]
commandname = SetDigitalOutput3Now
command = SetDigitalOutput3Now
hasparameter = 0
requiresack = 0
isiotcommand = 0
usepythoninterface = SetDigitalOutput3Now

[CloudSDKDefaultCommand6]
commandname = SetDigitalOutput4Now
command = SetDigitalOutput4Now
hasparameter = 0
requiresack = 0
isiotcommand = 0
usepythoninterface = SetDigitalOutput4Now

[CloudSDKDefaultCommand7]
commandname = ClearDigitalOutput1Now
command = ClearDigitalOutput1Now
hasparameter = 0
requiresack = 0
isiotcommand = 0
usepythoninterface = ClearDigitalOutput1Now

[CloudSDKDefaultCommand8]
commandname = ClearDigitalOutput2Now
command = ClearDigitalOutput2Now
hasparameter = 0
requiresack = 0
isiotcommand = 0
usepythoninterface = ClearDigitalOutput2Now

[CloudSDKDefaultCommand9]
commandname = ClearDigitalOutput3Now
command = ClearDigitalOutput3Now
hasparameter = 0
requiresack = 0
isiotcommand = 0
usepythoninterface = ClearDigitalOutput3Now

[CloudSDKDefaultCommand10]
commandname = ClearDigitalOutput4Now
command = ClearDigitalOutput4Now
hasparameter = 0
requiresack = 0
isiotcommand = 0
usepythoninterface = ClearDigitalOutput4Now

[CloudSDKDefaultCommand11]
commandname = Enable SSH
command = EnableSSH
hasparameter = 0
requiresack = 0
isiotcommand = 0
usepythoninterface = EnableSSH

[CloudSDKDefaultCommand12]
commandname = Disable SSH
command = DisableSSH
hasparameter = 0
requiresack = 0
isiotcommand = 0
usepythoninterface = DisableSSH

[CloudSDKDefaultCommand13]
commandname = SwitchToConfiguration
command =  SwitchToConfiguration
hasparameter = 0
requiresack = 0
isiotcommand = 0
usepythoninterface =  SwitchToConfiguration
 
#
# Default Rules Section
#
# Notes:
#
# name = name of rule as it appears on the cloud
# ruletype = 1 - standard rule (smart rules not yet supported)
# rulelocation = Cloud for cloud rules or Local for Cloud like standard rules.
#                They are run locally for speed or offline support.
# sensor = name of sensor to monitor.
# condition = string that appears on cloud for condition.  If local rule use IsEqualTo, IsNotEqualTo, IsGreaterThan, IsGreaterOrEqual, IsLessThan, IsLessOrEqual
# conditionvalue = used for local rules only.
# commandparameter = 1 - command requires parameter, 0 - no parameter required.
# severity = one of Critical, Information, Major, Minor, Warning for cloud usage
# notificationtype = one of DeviceCommand, Email, Push, SignalR, WebHook, UI Alert, MQTT for cloud usage.
# command = name of cloud command to execute.
#

[CloudSDKDefaultRule1]
name = SmartEdgeIIoTTempToLow
ruletype = 1 
rulelocation = Cloud
sensor = CpuTemperature
condition = CpuTemperature < 10
conditionvalue = 10
commandparameter = 0
severity = Critical
notificationtype = DeviceCommand
command = Reboot


#
# Omeag Rules Section
#
#
# Uncomment to test/add custom omega rules
#
# Notes:
# You must know the naming format for USB SmartSensors.Use OmegaTools to obtain
#   <sensor_type><SensorName programmed into sensor><SensorID>
# sensor can be named device i.e. "SP_002_1_Input1_0x101133910109622"
# Output may be named any valid output ("command registered with system") in
#   the example below we use "SP_002_1_Output0_0x101133910109622Clear" which
#   is autogenerated when you plugged in that device.
# You can preset rules for devices not yet plugged in.
#

#[CloudSDKCustomOmegaRule1]
#name = OmegaCpuTemperatureHigh
#ruletype = 1
#rulelocation = Cloud
#sensor = CpuTemperature
#condition = CpuTemperature > 60
#conditionvalue = 60
#commandparameter = 0
#severity = Critical
#notificationtype = DeviceCommand
#command = SP_002_1_Output0_0x101133910109622Clear

#[CloudSDKCustomOmegaRule2]
#name = OmegaCpuTemeratureLow
#ruletype = 1
#rulelocation = Cloud
#sensor = CpuTemperature
#condition = CpuTemperature < 10
#conditionvalue = 10
#commandparameter = 0
#severity = Critical
#notificationtype = DeviceCommand
#command = SP_002_1_Output0_0x101133910109622Set



